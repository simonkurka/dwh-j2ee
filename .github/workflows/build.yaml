name: Build Docker Images

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 15

      - name: Cache Local Maven Repo
        uses: actions/cache@v2.1.2
        with:
          path: ~/.m2/repository
          key: maven-repo
          
      - name: Prepare Version
        id: prep
        run: |
          echo ::set-output name=repository::$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
              echo ::set-output name=version::$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
              echo ::set-output name=release::true
              echo ::set-output name=prerelease::false
          elif [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+(\.[0-9]+)?rc[0-9]+$ ]]; then
              echo ::set-output name=version::$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
              echo ::set-output name=release::true
              echo ::set-output name=prerelease::true
          else
              echo ::set-output name=version::$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
          fi

      - name: Build
        run: mvn clean install
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: EAR
          path: target/dwh-j2ee-${{ steps.prep.outputs.version }}.ear
        
      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        if: steps.prep.outputs.release == 'true'
        with:
          prerelease: ${{ steps.prep.outputs.prerelease }}
          files: target/dwh-j2ee-${{ steps.prep.outputs.version }}.ear
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

